#!/usr/bin/env bash
set -euo pipefail

set -x

RELEASE_PATH="$(cd "$(dirname "$0")/.." && pwd)"
export RELEASE_PATH

export BOSH_DEPLOYMENT=bpm
export BOSH_NON_INTERACTIVE=true
export BOSH_ENVIRONMENT=vbox

bosh create-release \
  --dir "${RELEASE_PATH}" --force

# Currently bosh will upload event if it has it, so check first
STEMCELL=$(bosh stemcells | grep warden | awk '{print $1}')
if [ -z "$STEMCELL" ]; then
  bosh upload-stemcell https://s3.amazonaws.com/bosh-core-stemcells/456.30/bosh-stemcell-456.30-warden-boshlite-ubuntu-xenial-go_agent.tgz --sha1 61791b4d37ee3aacb9db36bb819c1fbcc4785a9e
fi

bosh upload-release \
  --dir "${RELEASE_PATH}"

bosh deploy \
  "${RELEASE_PATH}/manifests/bosh-lite.yml"

# This is the IP of the first VM in the bosh in the concourse container.
# It will not change unless we deploy more instances/jobs etc or the upstream
# docker image changes its cloudconfig.
AGENT_HOST="$(bosh vms | grep running | grep bpm | awk '{print $4}')"
agent_port=1337

pushd "${RELEASE_PATH}/src/bpm/acceptance" > /dev/null
  go run github.com/onsi/ginkgo/v2/ginkgo -r -p --race --randomize-all -- --agent-uri="http://${AGENT_HOST}:${agent_port}"
popd > /dev/null

# We run the errand twice to make sure there is no state left on the VM which
# would prevent this.
bosh run-errand test-errand
bosh run-errand test-errand
