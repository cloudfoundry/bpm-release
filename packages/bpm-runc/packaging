set -eu

# We need to perform some linker tomfoolery in order to successfully compile
# runc for running on a BOSH VM. runc systemd support requires dynamic linking.
#
# We could modify the dynamic linker path settings of the machine as a whole or
# add our libraries to the machine's pool. We're not ok with this because this
# will interfere with other jobs on the machine which is unacceptable.
#
# Typically, you can set the LD_LIBRARY_PATH environment variable which will
# modify the linker's search path in any programs which have that environment
# variable present. Unfortunately this does not work in this case because runc
# re-execs itself with an empty environment which causes the child process to
# crash because it cannot find the libraries to link against.
#
# Instead we add an attribute in the binary to tell the linker where to find
# libraries whenever this binary is executed. We feel this is acceptable
# because we have such tight control over the execution environment in our
# deployments.
#
# The path we set is different from the current package path because we
# eventually move the binary and libraries before running them, as part of bpm
# packaging.
# 
# The runc Makefile has a parameter for modifying the linker options but it is
# broken in the case that Git is not installed on the system because of quoting
# mishaps.

source /var/vcap/packages/golang-1-linux/bosh/compile.env

RUNC_VERSION="$(ls runc/runc-*.tar.xz | sed 's/runc\/runc-//' | sed 's/.tar.xz//')"

PKG_CONFIG_VERSION=0.29.2
PKG_CONFIG_PREFIX="$(mktemp -d)"

GPERF_VERSION=3.1
GPERF_PREFIX="${BOSH_INSTALL_TARGET}/gperf"

LIBSECCOMP_PREFIX="${BOSH_INSTALL_TARGET}/lib/libseccomp"
LIBSECCOMP_RUNTIME_PATH=/var/vcap/packages/bpm/lib/libseccomp/lib
LIBSECCOMP_VERSION=2.5.1

RUNC_PACKAGE_PATH=github.com/opencontainers/runc

# compile pkg-config
(
  set -eu

  tar xf "pkg-config/pkg-config-${PKG_CONFIG_VERSION}.tar.gz"
  cd "pkg-config-${PKG_CONFIG_VERSION}"
  ./configure --prefix="${PKG_CONFIG_PREFIX}" --with-internal-glib
  make
  make install prefix="${PKG_CONFIG_PREFIX}"
)

# compile gperf
(
  set -eu
  tar xf "gperf/gperf-${GPERF_VERSION}.tar.gz"
  cd "gperf-${GPERF_VERSION}"
  ./configure --prefix="${GPERF_PREFIX}"
  make
  make install
)

# compile libseccomp
(
  set -eu

  export PATH="${GPERF_PREFIX}/bin:$PATH"

  tar xf "libseccomp/libseccomp-${LIBSECCOMP_VERSION}.tar.gz"
  cd "libseccomp-${LIBSECCOMP_VERSION}"
  ./configure --prefix="${LIBSECCOMP_PREFIX}"
  make
  make install
)

# install runc
(
  set -eu
  export PATH="${PKG_CONFIG_PREFIX}/bin:$PATH"

  tar xf "runc/runc-${RUNC_VERSION}.tar.xz"
  (
    set -eu
    pushd "runc-${RUNC_VERSION}"
    env \
    PKG_CONFIG_PATH="${LIBSECCOMP_PREFIX}/lib/pkgconfig" \
    GOPROXY=off \
    go build \
      -buildmode=pie \
      -ldflags "-X main.gitCommit=unknown -X main.version=${RUNC_VERSION} -r ${LIBSECCOMP_RUNTIME_PATH}" \
      -tags "seccomp apparmor" \
	    -mod=vendor \
      -o "${BOSH_INSTALL_TARGET}/bin/runc" \
      .
    popd
  )
)

# clean up source artifacts
rm -r "${PKG_CONFIG_PREFIX}"
