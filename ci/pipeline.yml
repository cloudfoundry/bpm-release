resource_types:
- name: gcs-resource
  type: registry-image
  check_every: 168h
  source:
    repository: frodenas/gcs-resource
    username: ((dockerhub_username))
    password: ((dockerhub_password))

resources:
- name: bosh-integration-image
  type: registry-image
  check_every: 168h
  source:
    repository: bosh/integration
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: bosh-security-scanner-registry-image
  type: registry-image
  check_every: 24h
  source:
    repository: bosh/security-scanner
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: bpm-release
  type: git
  source:
    branch: master
    private_key: ((github_deploy_key_bpm-release.private_key))
    uri: git@github.com:cloudfoundry/bpm-release.git

- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 4:30 -0700
    days: [Saturday]

- name: golang-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

- name: bosh-shared-ci
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-shared-ci.git

- name: version
  type: semver
  source:
    driver: gcs
    bucket: bpm-release-version
    key: current-version
    initial_version: 0.0.0
    json_key: ((gcp_json_key))

- name: github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bpm-release
    access_token: ((github_public_repo_token))

- name: release-notes
  type: gcs-resource
  source:
    bucket: bpm-release-notes
    json_key: ((gcp_json_key))
    versioned_file: release-notes.md
    initial_content_text: ""

- name: boshlite-jammy-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-jammy-go_agent

- name: runc-linux
  type: github-release
  check_every: 24h
  source:
    owner: opencontainers
    repository: runc
    pre_release: true
    access_token: ((github_public_repo_token))
    order_by: time # without this v1.0.0-rc9 > v1.0.0-rc10
    tag_filter: 'v((\d|\.)+)$'

- name: tini
  type: github-release
  check_every: 24h
  source:
    owner: krallin
    repository: tini
    access_token: ((github_public_repo_token))

- name: bpm-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/bpm-release
    branch: master
    paths: [ci/Dockerfile]
    private_key: ((github_deploy_key_bpm-release.private_key))

- name: bpm-ci-registry-image
  type: registry-image
  check_every: 168h
  source:
    repository: cfbpm/bpm-ci
    username: ((bpm-docker.username))
    password: ((bpm-docker.password))

- name: bpm-ci-image
  type: docker-image
  check_every: never
  source:
    repository: cfbpm/bpm-ci
    username: ((bpm-docker.username))
    password: ((bpm-docker.password))

- name: bosh-golang-release-image
  type: docker-image
  check_every: 1h
  source:
    repository: bosh/golang-release

- name: daily
  type: time
  source:
    interval: 24h

- name: bpm-bosh-io
  type: bosh-io-release
  source:
    repository: cloudfoundry/bpm-release

jobs:
- name: test-unit
  plan:
  - get: bpm-release
    trigger: true
  - task: test-unit
    file: bpm-release/ci/tasks/test-unit.yml
    privileged: true

- name: test-acceptance-jammy
  plan:
  - in_parallel:
    - get: bpm-release
      trigger: true
    - get: boshlite-jammy-stemcell
      trigger: true
  - task: test-acceptance
    file: bpm-release/ci/tasks/test-acceptance.yml
    params:
      STEMCELL_NAME: ubuntu-jammy
    input_mapping:
      bosh-stemcell: boshlite-jammy-stemcell
    privileged: true

- name: test-upgrade
  plan:
  - in_parallel:
    - get: bpm-release
      trigger: true
    - get: boshlite-jammy-stemcell
      trigger: true
    - get: bpm-bosh-io
  - task: test-acceptance
    file: bpm-release/ci/tasks/test-upgrade.yml
    input_mapping:
      bosh-stemcell: boshlite-jammy-stemcell
    privileged: true

- name: bump-golang-package
  serial: true
  plan:
    - in_parallel:
        - get: bpm-release
        - get: golang-release
          trigger: true
        - get: bosh-stemcell
          resource: boshlite-jammy-stemcell
    - task: bump-golang-packages
      file: golang-release/ci/tasks/shared/bump-golang-package.yml
      input_mapping:
        input_repo: bpm-release
      output_mapping:
        output_repo: bumped-bpm-release
      params:
        PACKAGES: [golang-1-linux]
        PRIVATE_YML: |
          ---
          blobstore:
            options:
              credentials_source: static
              json_key: '((gcp_json_key))'
    - task: test-acceptance
      file: bpm-release/ci/tasks/test-acceptance.yml
      input_mapping:
        bpm-release: bumped-bpm-release
      params:
        STEMCELL_NAME: ubuntu-jammy
      privileged: true
    - put: bpm-release
      params:
        repository: bumped-bpm-release
        rebase: true

- name: pre-release-fan-in
  plan:
  - get: bpm-release
    trigger: true
    passed:
    - test-acceptance-jammy
    - test-unit
    - test-upgrade

- name: release-new-patch
  serial_groups:
  - version
  plan:
  - get: bpm-release
    passed:
    - pre-release-fan-in
  - get: version
    params:
      bump: patch
  - put: version
    params:
      file: version/version

- name: release-new-minor
  serial_groups:
  - version
  plan:
  - get: bpm-release
    passed:
    - pre-release-fan-in
  - get: version
    params:
      bump: minor
  - put: version
    params:
      file: version/version

- name: release-new-major
  serial_groups:
  - version
  plan:
  - get: bpm-release
    passed:
    - pre-release-fan-in
  - get: version
    params:
      bump: major
  - put: version
    params:
      file: version/version

- name: automatically-release-new-patch
  serial_groups:
  - version
  plan:
  - in_parallel:
    - get: bpm-release
      trigger: true
      passed:
      - pre-release-fan-in
    - get: bosh-shared-ci
    - get: current-version
      resource: version
    - get: patched-version
      resource: version
      params:
        bump: patch
    - get: bosh-security-scanner-registry-image
  - try:
      task: check-for-patched-cves
      file: bosh-shared-ci/tasks/release/check-for-patched-cves.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        input_repo: bpm-release
        version: current-version
      params:
        SEVERITY: CRITICAL,HIGH
        SOURCE_PATH: src/bpm
      on_success:
        do:
          - put: release-notes
            params:
              file: release-notes/release-notes.md
          - put: version
            params:
              file: patched-version/version
  - task: ensure-cve-checker-succeeded
    file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
    image: bosh-security-scanner-registry-image
    input_mapping:
      task-output-folder: patched_cves
  - try:
      task: check-for-updated-vendored-packages
      file: bosh-shared-ci/tasks/release/check-for-updated-vendored-packages.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        input_repo: bpm-release
        version: current-version
      params:
        PACKAGES: [ golang-1-linux ]
      on_success:
        do:
          - put: release-notes
            params:
              file: release-notes/release-notes.md
          - put: version
            params:
              file: patched-version/version
  - task: ensure-update-package-check-succeeded
    file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
    image: bosh-security-scanner-registry-image
    input_mapping:
      task-output-folder: package-updates
  - try:
      task: check-for-updated-blobs
      file: bosh-shared-ci/tasks/release/check-for-updated-blobs.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        version: current-version
        input_repo: bpm-release
      params:
        BLOBS:
          - runc
      on_success:
        do:
          - put: release-notes
            params:
              file: release-notes/release-notes.md
          - put: version
            params:
              file: patched-version/version
  - task: ensure-blob-update-checker-succeeded
    file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
    image: bosh-security-scanner-registry-image
    input_mapping:
      task-output-folder: blob-updates

- name: create-final-release
  serial_groups: [version]
  disable_manual_trigger: true
  plan:
  - in_parallel:
    - get: bosh-shared-ci
    - get: bosh-integration-image
    - get: bpm-release
      passed:
      - pre-release-fan-in
    - get: version
      trigger: true
      params:
        bump: final
    - get: release-notes
  - task: bump-local-version
    file: bpm-release/ci/tasks/bump-local-version.yml
    image: bosh-integration-image
  - task: finalize-release
    file: bosh-shared-ci/tasks/release/create-final-release.yml
    image: bosh-integration-image
    input_mapping:
      release_repo: release-repo
      version: version
    params:
      GIT_USER_NAME: CI Bot
      GIT_USER_EMAIL: bots@cloudfoundry.org
      PRIVATE_YML: |
        ---
        blobstore:
          options:
            credentials_source: static
            json_key: '((gcp_json_key))'
  - put: bpm-release
    get_params:
      submodules: none
    params:
      repository: release_repo
      submodules: none
      rebase: true
      tag: release_metadata/tag-name
  - put: github-release
    params:
      name: release_metadata/tag-name
      tag: release_metadata/tag-name
      body: release-notes/release-notes.md
      commitish: bpm-release/.git/ref
      generate_release_notes: true
  - task: bump-local-version
    image: bosh-integration-image
    file: bpm-release/ci/tasks/bump-local-version.yml
    input_mapping:
      bpm-release: release_repo
    params:
      DEV: true
  - put: bpm-release
    get_params:
      submodules: none
    params:
      repository: release-repo
      submodules: none
      rebase: true
  - put: release-notes
    params:
      file: release_metadata/empty-file

- name: bump-deps
  public: true
  plan:
    - get: weekly
      trigger: true
    - get: bpm-ci-registry-image
    - get: bpm-release
    - get: golang-release
    - task: bump-deps
      file: golang-release/ci/tasks/shared/bump-deps.yml
      input_mapping:
        input_repo: bpm-release
      output_mapping:
        output_repo: bumped-bpm-release
      params:
        SOURCE_PATH: src/bpm
    - task: bump-runc-package
      image: bpm-ci-registry-image
      input_mapping:
        bpm-release: bumped-bpm-release
      output_mapping:
        bpm-release: bumped-bpm-release
      params:
        BOSH_PRIVATE_CONFIG: |
          ---
          blobstore:
            options:
              credentials_source: static
              json_key: '((gcp_json_key))'
      file: bpm-release/ci/tasks/bump-runc-package.yml
    - task: test-unit
      file: bpm-release/ci/tasks/test-unit.yml
      privileged: true
      input_mapping:
        bpm-release: bumped-bpm-release
    - put: bpm-release
      params:
        repository: bumped-bpm-release

- name: build-bpm-ci
  serial: true
  plan:
  - in_parallel:
    - get: daily
      trigger: true
    - get: bpm-ci
      trigger: true
      attempts: 3
    - get: bosh-golang-release-image
      trigger: true
      attempts: 3
      params: {save: true}
    - get: runc-linux
      trigger: true
      attempts: 3
    - get: tini
      trigger: true
      attempts: 3
      params:
        globs:
        - tini-amd64
  - put: bpm-ci-image
    attempts: 3
    params:
      load_base: bosh-golang-release-image
      build: .
      dockerfile: bpm-ci/ci/Dockerfile
